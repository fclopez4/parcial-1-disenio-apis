{
	"info": {
		"_postman_id": "975b3cd4-bd62-4ac8-8401-31d4f87c96a0",
		"name": "Restaurantes_api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30445267"
	},
	"item": [
		{
			"name": "Restaurantes",
			"item": [
				{
					"name": "Crear un restaurante válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"restaurantId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"la subienda\",\r\n    \"address\":\"av siempre viva 123\",\r\n    \"kitchentype\":\"colombiana\",\r\n    \"websiteurl\":\"https://lasubiendaoriginal.com/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un restaurante inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error 400 bad request\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.include(\"name should not be empty\");",
									"    pm.expect(data.message).to.include(\"address should not be empty\");",
									"    pm.expect(data.message).to.include(\"kitchentype should not be empty\");",
									"    pm.expect(data.message).to.include(\"websiteurl should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"\",\n    \"address\":\"\",\n    \"kitchentype\":\"\",\n    \"websiteurl\":\"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of restaurants > ' + 0, function () {",
									"    var data = pm.response.json()",
									"    pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un restaurante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un restaurante por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"la subienda original\",\n    \"address\":\"av siempre viva 321\",\n    \"kitchentype\":\"colombiana\",\n    \"websiteurl\":\"https://lasubiendaoriginal.com/\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un restaurante con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"la subienda original\",\n    \"address\":\"av siempre viva 321\",\n    \"kitchentype\":\"colombiana\",\n    \"websiteurl\":\"https://lasubiendaoriginal.com/\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un restaurante por su ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un restaurante con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The restaurant with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Platos",
			"item": [
				{
					"name": "Crear un plato válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"dishId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"cazuela de mariscos\",\n    \"description\":\"es un plato fuerte típico de países latinoamericanos como la Región Caríbe de Colombia. Incluye ingredientes como langosta, langostinos, camarones, pescados, almejas, calamares, guiso sofrito de verduras (cebolla, zanahoria, pimiento, tomate y especias)\",\n    \"cost\":25000,\n    \"category\":\"plato_fuerte\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un plato inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error 400 bad request\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.include(\"name should not be empty\");",
									"    pm.expect(data.message).to.include(\"description should not be empty\");",
									"    pm.expect(data.message).to.include(\"cost must be a positive number\");",
									"    pm.expect(data.message).to.include(\"category should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"\",\n    \"description\":\"\",\n    \"cost\":0,\n    \"category\":\"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los platos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of dishes > ' + 0, function () {",
									"    var data = pm.response.json()",
									"    pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato por un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The dish with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"cazuela de mariscos\",\n    \"description\":\"es un plato fuerte típico de países latinoamericanos como la Región Caríbe de Colombia. Su preparación, así como sus ingredientes, suelen variar ligeramente en las diferentes regiones.\",\n    \"cost\":30000,\n    \"category\":\"plato_fuerte\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un plato con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The dish with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"cazuela de mariscos\",\n    \"description\":\"es un plato fuerte típico de países latinoamericanos como la Región Caríbe de Colombia. Su preparación, así como sus ingredientes, suelen variar ligeramente en las diferentes regiones.\",\n    \"cost\":30000,\n    \"category\":\"plato_fuerte\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato por su ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato con un ID que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"The dish with the given id was not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restaurantes-Platos",
			"item": [
				{
					"name": "Crear un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"restaurantId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"la subienda\",\r\n    \"address\":\"av siempre viva 123\",\r\n    \"kitchentype\":\"colombiana\",\r\n    \"websiteurl\":\"https://lasubiendaoriginal.com/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un primer plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"dishId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"cazuela de mariscos\",\n    \"description\":\"es un plato fuerte típico de países latinoamericanos como la Región Caríbe de Colombia. Incluye ingredientes como langosta, langostinos, camarones, pescados, almejas, calamares, guiso sofrito de verduras (cebolla, zanahoria, pimiento, tomate y especias)\",\n    \"cost\":25000,\n    \"category\":\"plato_fuerte\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear un segundo plato",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"dishId_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"cazuela de mariscos\",\n    \"description\":\"es un plato fuerte típico de países latinoamericanos como la Región Caríbe de Colombia. Incluye ingredientes como langosta, langostinos, camarones, pescados, almejas, calamares, guiso sofrito de verduras (cebolla, zanahoria, pimiento, tomate y especias)\",\n    \"cost\":25000,\n    \"category\":\"plato_fuerte\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un plato a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar un plato que no existe a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"Dish not found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los platos que están en un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un plato que no esté asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"    pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"Dish not found in the restaurant\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/{{dishId_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos que están asociados a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{dishId}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar los platos asociados a un restaurante, con un plato inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato previamente asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/{{dishId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar un plato que no estaba previamente asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"    pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"    var data = pm.response.json();",
									"    pm.expect(data.message).to.eql(\"Dish not found in the restaurant\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantId}}/dishes/{{dishId_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantId}}",
								"dishes",
								"{{dishId_2}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}